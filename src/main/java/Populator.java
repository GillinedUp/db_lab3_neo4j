public class Populator {
    private Solution solution;

    public Populator(Solution solution) {
        this.solution = solution;
    }

    public void createNodes() {
        System.out.println(solution.createBand("Gloryhammer", 2010));
        System.out.println(solution.createBand("Tank", 1980));
        System.out.println(solution.createBand("Judas Priest", 1970));
        System.out.println(solution.createBand("Death Angel", 1982));
        System.out.println(solution.createBand("Death", 1984));
        System.out.println(solution.createBand("Candlemass", 1984));
        System.out.println(solution.createBand("Anthrax", 1981));
        System.out.println(solution.createBand("Blind Guardian", 1986));
        System.out.println(solution.createBand("Gamma Ray", 1989));
        System.out.println(solution.createBand("Diamond Head", 1976));
        System.out.println(solution.createCountry("UK", "Europe"));
        System.out.println(solution.createCountry("US", "North America"));
        System.out.println(solution.createCountry("Switzerland", "Europe"));
        System.out.println(solution.createCountry("Sweden", "Europe"));
        System.out.println(solution.createCountry("Germany", "Europe"));
        System.out.println(solution.createGenre("Heavy metal", "clean", "mid", "mild"));
        System.out.println(solution.createGenre("Thrash metal", "harsh", "fast", "heavy"));
        System.out.println(solution.createGenre("Death metal", "growl", "fast", "heavy"));
        System.out.println(solution.createGenre("Doom metal", "clean", "slow", "heavy"));
        System.out.println(solution.createGenre("Power metal", "clean", "fast", "mild"));
        System.out.println(solution.createGenre("Speed metal", "clean", "fast", "mild"));
        System.out.println(solution.createPerson("James Cartwright", 1986));
        System.out.println(solution.createPerson("Ben Turk"));
        System.out.println(solution.createPerson("Paul Templing"));
        System.out.println(solution.createPerson("Christopher Bowes", 1986));
        System.out.println(solution.createPerson("Thomas Winkler", 1985));
        System.out.println(solution.createPerson("Algy Ward", 1959));
        System.out.println(solution.createPerson("Mick Tucker"));
        System.out.println(solution.createPerson("Cliff Evans", 1962));
        System.out.println(solution.createPerson("Bruce Bisland", 1958));
        System.out.println(solution.createPerson("Ian Hill", 1951));
        System.out.println(solution.createPerson("Rob Halford", 1951));
        System.out.println(solution.createPerson("Glenn Tipton", 1947));
        System.out.println(solution.createPerson("Scott Travis", 1961));
        System.out.println(solution.createPerson("Richie Faulkner", 1980));
        System.out.println(solution.createPerson("Rob Cavestany", 1968));
        System.out.println(solution.createPerson("Mark Osegueda", 1969));
        System.out.println(solution.createPerson("Ted Aguilar"));
        System.out.println(solution.createPerson("Damien Sisson", 1981));
        System.out.println(solution.createPerson("Will Carroll", 1973));
        System.out.println(solution.createPerson("Chuck Schuldiner", 1967));
        System.out.println(solution.createPerson("Scott Clendenin", 1968));
        System.out.println(solution.createPerson("Richard Christy", 1974));
        System.out.println(solution.createPerson("Shannon Hamm", 1967));
        System.out.println(solution.createPerson("Leif Edling", 1963));
        System.out.println(solution.createPerson("Mats Björkman"));
        System.out.println(solution.createPerson("Jan Lindh"));
        System.out.println(solution.createPerson("Lars Johansson"));
        System.out.println(solution.createPerson("Mats Levén", 1964));
        System.out.println(solution.createPerson("Scott Ian", 1963));
        System.out.println(solution.createPerson("Charlie Benante", 1962));
        System.out.println(solution.createPerson("Frank Bello", 1965));
        System.out.println(solution.createPerson("Joey Belladonna", 1960));
        System.out.println(solution.createPerson("Jonathan Donais", 1979));
        System.out.println(solution.createPerson("Hansi Kürsch", 1966));
        System.out.println(solution.createPerson("André Olbrich", 1967));
        System.out.println(solution.createPerson("Marcus Siepen", 1968));
        System.out.println(solution.createPerson("Frederik Ehmke", 1978));
        System.out.println(solution.createPerson("Kai Hansen", 1963));
        System.out.println(solution.createPerson("Dirk Schlächter", 1965));
        System.out.println(solution.createPerson("Henjo Richter", 1963));
        System.out.println(solution.createPerson("Michael Ehré", 1971));
        System.out.println(solution.createPerson("Frank Beck", 1969));
        System.out.println(solution.createPerson("Brian Tatler", 1963));
        System.out.println(solution.createPerson("Karl Wilcox"));
        System.out.println(solution.createPerson("Andy Abberley"));
        System.out.println(solution.createPerson("Rasmus Bom Andersen", 1984));
        System.out.println(solution.createPerson("Dean Ashton"));
    }

    public void createRelationships() {
        System.out.println(solution.createOriginRelationship("Judas Priest", "UK"));
        System.out.println(solution.createOriginRelationship("Gloryhammer", "UK"));
        System.out.println(solution.createOriginRelationship("Gloryhammer", "Switzerland"));
        System.out.println(solution.createOriginRelationship("Tank", "UK"));
        System.out.println(solution.createOriginRelationship("Death Angel", "US"));
        System.out.println(solution.createOriginRelationship("Candlemass", "Sweden"));
        System.out.println(solution.createOriginRelationship("Death", "US"));
        System.out.println(solution.createOriginRelationship("Anthrax", "US"));
        System.out.println(solution.createOriginRelationship("Diamond Head", "UK"));
        System.out.println(solution.createOriginRelationship("Blind Guardian", "Germany"));
        System.out.println(solution.createOriginRelationship("Gamma Ray", "Germany"));
        System.out.println(solution.createPlaysRelationship("Judas Priest", "Heavy metal"));
        System.out.println(solution.createPlaysRelationship("Gloryhammer", "Power metal"));
        System.out.println(solution.createPlaysRelationship("Tank", "Heavy metal"));
        System.out.println(solution.createPlaysRelationship("Tank", "Speed metal"));
        System.out.println(solution.createPlaysRelationship("Death Angel", "Thrash metal"));
        System.out.println(solution.createPlaysRelationship("Candlemass", "Doom metal"));
        System.out.println(solution.createPlaysRelationship("Death", "Death metal"));
        System.out.println(solution.createPlaysRelationship("Anthrax", "Thrash metal"));
        System.out.println(solution.createPlaysRelationship("Diamond Head", "Heavy metal"));
        System.out.println(solution.createPlaysRelationship("Blind Guardian", "Power metal"));
        System.out.println(solution.createPlaysRelationship("Blind Guardian", "Speed metal"));
        System.out.println(solution.createPlaysRelationship("Gamma Ray", "Power metal"));
        System.out.println(solution.createIsMemberOfRelationship("James Cartwright", "Gloryhammer", 2010, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Ben Turk", "Gloryhammer", 2010, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Paul Templing", "Gloryhammer", 2010, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Christopher Bowes", "Gloryhammer", 2010, "keyboards"));
        System.out.println(solution.createIsMemberOfRelationship("Thomas Winkler", "Gloryhammer", 2010, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Algy Ward", "Tank", 1980, "vocals, bass"));
        System.out.println(solution.createIsMemberOfRelationship("Mick Tucker", "Tank", 1983, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Cliff Evans", "Tank", 1984, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Bruce Bisland", "Tank", 2001, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Ian Hill", "Judas Priest", 1970, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Rob Halford", "Judas Priest", 1973, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Glenn Tipton", "Judas Priest", 1974, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Scott Travis", "Judas Priest", 1989, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Richie Faulkner", "Judas Priest", 2010, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Rob Cavestany", "Death Angel", 1982, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Mark Osegueda", "Death Angel", 1984, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Ted Aguilar", "Death Angel", 2001, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Damien Sisson", "Death Angel", 2009, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Will Carroll", "Death Angel", 2009, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Chuck Schuldiner", "Death", 1984, "guitars, vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Scott Clendenin", "Death", 1996, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Richard Christy", "Death", 1996, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Shannon Hamm", "Death", 1996, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Leif Edling", "Candlemass", 1984, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Lars Johansson", "Candlemass", 1987, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Mats Björkman", "Candlemass", 1985, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Jan Lindh", "Candlemass", 1987, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Mats Levén", "Candlemass", 2006, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Scott Ian", "Anthrax", 1981, "guitars, vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Charlie Benante", "Anthrax", 1983, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Frank Bello", "Anthrax", 1984, "bass"));
        System.out.println(solution.createIsMemberOfRelationship("Joey Belladonna", "Anthrax", 1984, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Jonathan Donais", "Anthrax", 2013, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Hansi Kürsch", "Blind Guardian", 1986, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("André Olbrich", "Blind Guardian", 1986, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Marcus Siepen", "Blind Guardian", 1987, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Frederik Ehmke", "Blind Guardian", 2005, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Kai Hansen", "Gamma Ray", 1989, "guitars, vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Dirk Schlächter", "Gamma Ray", 1990, "guitars, keyboards, bass"));
        System.out.println(solution.createIsMemberOfRelationship("Henjo Richter", "Gamma Ray", 1989, "guitars, keyboards"));
        System.out.println(solution.createIsMemberOfRelationship("Michael Ehré", "Gamma Ray", 1989, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Frank Beck", "Gamma Ray", 1989, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Brian Tatler", "Diamond Head", 1976, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Karl Wilcox", "Diamond Head", 1992, "drums"));
        System.out.println(solution.createIsMemberOfRelationship("Andy Abberley", "Diamond Head", 2006, "guitars"));
        System.out.println(solution.createIsMemberOfRelationship("Rasmus Bom Andersen", "Diamond Head", 2014, "vocals"));
        System.out.println(solution.createIsMemberOfRelationship("Dean Ashton", "Diamond Head", 2016, "bass"));
    }
}
